// Generated by the protocol buffer compiler.  DO NOT EDIT!

package benchpbnano;

@SuppressWarnings("hiding")
public interface Bench {

  // enum Enum
  public static final int Apples = 0;
  public static final int Pears = 1;
  public static final int Bananas = 2;

  public static final class Foo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Foo[] _emptyArray;
    public static Foo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Foo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint64 id = 1;
    public long id;

    // required int32 count = 2;
    public int count;

    // required int32 prefix = 3;
    public int prefix;

    // required uint32 length = 4;
    public int length;

    public Foo() {
      clear();
    }

    public Foo clear() {
      id = 0L;
      count = 0;
      prefix = 0;
      length = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt64(1, this.id);
      output.writeInt32(2, this.count);
      output.writeInt32(3, this.prefix);
      output.writeUInt32(4, this.length);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt64Size(1, this.id);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.count);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.prefix);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(4, this.length);
      return size;
    }

    @Override
    public Foo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readUInt64();
            break;
          }
          case 16: {
            this.count = input.readInt32();
            break;
          }
          case 24: {
            this.prefix = input.readInt32();
            break;
          }
          case 32: {
            this.length = input.readUInt32();
            break;
          }
        }
      }
    }

    public static Foo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Foo(), data);
    }

    public static Foo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Foo().mergeFrom(input);
    }
  }

  public static final class Bar extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Bar[] _emptyArray;
    public static Bar[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Bar[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .benchpbnano.Foo parent = 1;
    public benchpbnano.Bench.Foo parent;

    // required int32 time = 2;
    public int time;

    // required float ratio = 3;
    public float ratio;

    // required uint32 size = 4;
    public int size;

    public Bar() {
      clear();
    }

    public Bar clear() {
      parent = null;
      time = 0;
      ratio = 0F;
      size = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.parent != null) {
        output.writeMessage(1, this.parent);
      }
      output.writeInt32(2, this.time);
      output.writeFloat(3, this.ratio);
      output.writeUInt32(4, this.size);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.parent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.parent);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.time);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(3, this.ratio);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(4, this.size);
      return size;
    }

    @Override
    public Bar mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.parent == null) {
              this.parent = new benchpbnano.Bench.Foo();
            }
            input.readMessage(this.parent);
            break;
          }
          case 16: {
            this.time = input.readInt32();
            break;
          }
          case 29: {
            this.ratio = input.readFloat();
            break;
          }
          case 32: {
            this.size = input.readUInt32();
            break;
          }
        }
      }
    }

    public static Bar parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Bar(), data);
    }

    public static Bar parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Bar().mergeFrom(input);
    }
  }

  public static final class FooBar extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FooBar[] _emptyArray;
    public static FooBar[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FooBar[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .benchpbnano.Bar sibling = 1;
    public benchpbnano.Bench.Bar sibling;

    // optional string name = 2;
    public java.lang.String name;

    // optional double rating = 3;
    public double rating;

    // optional uint32 postfix = 4;
    public int postfix;

    public FooBar() {
      clear();
    }

    public FooBar clear() {
      sibling = null;
      name = "";
      rating = 0D;
      postfix = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.sibling != null) {
        output.writeMessage(1, this.sibling);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      if (java.lang.Double.doubleToLongBits(this.rating)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(3, this.rating);
      }
      if (this.postfix != 0) {
        output.writeUInt32(4, this.postfix);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.sibling != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.sibling);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (java.lang.Double.doubleToLongBits(this.rating)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(3, this.rating);
      }
      if (this.postfix != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.postfix);
      }
      return size;
    }

    @Override
    public FooBar mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.sibling == null) {
              this.sibling = new benchpbnano.Bench.Bar();
            }
            input.readMessage(this.sibling);
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 25: {
            this.rating = input.readDouble();
            break;
          }
          case 32: {
            this.postfix = input.readUInt32();
            break;
          }
        }
      }
    }

    public static FooBar parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FooBar(), data);
    }

    public static FooBar parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FooBar().mergeFrom(input);
    }
  }

  public static final class FooBarContainer extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FooBarContainer[] _emptyArray;
    public static FooBarContainer[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FooBarContainer[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .benchpbnano.FooBar list = 1;
    public benchpbnano.Bench.FooBar[] list;

    // optional bool initialized = 2;
    public boolean initialized;

    // optional .benchpbnano.Enum fruit = 3;
    public int fruit;

    // optional string location = 4;
    public java.lang.String location;

    public FooBarContainer() {
      clear();
    }

    public FooBarContainer clear() {
      list = benchpbnano.Bench.FooBar.emptyArray();
      initialized = false;
      fruit = benchpbnano.Bench.Apples;
      location = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          benchpbnano.Bench.FooBar element = this.list[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.initialized != false) {
        output.writeBool(2, this.initialized);
      }
      if (this.fruit != benchpbnano.Bench.Apples) {
        output.writeInt32(3, this.fruit);
      }
      if (!this.location.equals("")) {
        output.writeString(4, this.location);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          benchpbnano.Bench.FooBar element = this.list[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.initialized != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.initialized);
      }
      if (this.fruit != benchpbnano.Bench.Apples) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.fruit);
      }
      if (!this.location.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.location);
      }
      return size;
    }

    @Override
    public FooBarContainer mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.list == null ? 0 : this.list.length;
            benchpbnano.Bench.FooBar[] newArray =
                new benchpbnano.Bench.FooBar[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new benchpbnano.Bench.FooBar();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new benchpbnano.Bench.FooBar();
            input.readMessage(newArray[i]);
            this.list = newArray;
            break;
          }
          case 16: {
            this.initialized = input.readBool();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case benchpbnano.Bench.Apples:
              case benchpbnano.Bench.Pears:
              case benchpbnano.Bench.Bananas:
                this.fruit = value;
                break;
            }
            break;
          }
          case 34: {
            this.location = input.readString();
            break;
          }
        }
      }
    }

    public static FooBarContainer parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FooBarContainer(), data);
    }

    public static FooBarContainer parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FooBarContainer().mergeFrom(input);
    }
  }
}
